[tool.cibuildwheel]
build-verbosity = "1"

manylinux-x86_64-image = "manylinux_2_28"
manylinux-aarch64-image = "manylinux_2_28"

[tool.cibuildwheel.linux]
before-all = [
  "bash .github/build-scripts/manylinux-install-build-dependencies.sh",
  "bash .github/build-scripts/linux-install-tesseract.sh",
]

[[tool.cibuildwheel.overrides]]
select = "*-musllinux*"
before-all = [
  "bash .github/build-scripts/musllinux-install-build-dependencies.sh",
  "bash .github/build-scripts/linux-install-tesseract.sh",
]

[tool.cibuildwheel.macos]
before-all = [
  "bash .github/build-scripts/macos-install-build-dependencies.sh",
  "bash .github/build-scripts/macos-install-tesseract.sh",
]

[tool.cibuildwheel.windows]
# Command to run before building wheels on Windows
before-all = [
  "powershell -ExecutionPolicy Bypass -File .github/build-scripts/windows-install-dependencies.ps1 -InstallDir $env:GITHUB_WORKSPACE\\win64",
]

# Command to repair the wheel by copying DLLs
# Ensure $env:INSTALL_DIR is correctly set by your before-all script (e.g., to $GITHUB_WORKSPACE\win64)
repair-wheel-command = "powershell -Command \"Get-ChildItem -Path $env:INSTALL_DIR\\bin\\*.dll | Copy-Item -Destination {dest_dir} -ErrorAction SilentlyContinue\""

# Environment variables for the build process on Windows
# This is now a standard TOML table, not an inline table
[tool.cibuildwheel.windows.environment]
PATH = "{project}\\win64\\bin;{env_path}"
INCLUDE = "{project}\\win64\\include;{env_include}"
LIB = "{project}\\win64\\lib;{env_lib}"
TESSDATA_PREFIX = "{project}\\tessdata"
