[tool.cibuildwheel]
build-verbosity = "1"

manylinux-x86_64-image = "manylinux_2_28"
manylinux-aarch64-image = "manylinux_2_28"

[tool.cibuildwheel.linux]
before-all = [
  "bash .github/build-scripts/manylinux-install-build-dependencies.sh",
  "bash .github/build-scripts/linux-install-tesseract.sh",
]

[[tool.cibuildwheel.overrides]]
select = "*-musllinux*"
before-all = [
  "bash .github/build-scripts/musllinux-install-build-dependencies.sh",
  "bash .github/build-scripts/linux-install-tesseract.sh",
]

[tool.cibuildwheel.macos]
before-all = [
  "bash .github/build-scripts/macos-install-build-dependencies.sh",
  "bash .github/build-scripts/macos-install-tesseract.sh",
]

[tool.cibuildwheel.windows]
# Commands will be executed by cmd.exe by default.

before-all = [
  "echo [DEBUG] In cmd.exe (before_all). Current PATH is: %PATH%",
  "echo [DEBUG] Attempting to locate powershell.exe using 'where':",
  "where powershell.exe",
  # Explicitly call powershell.exe. Using -NoProfile to prevent profile loading issues.
  # Paths for -File and -InstallDir are quoted.
  "powershell.exe -NoProfile -ExecutionPolicy Bypass -File \"{project}/.github/build-scripts/windows-install-dependencies.ps1\" -InstallDir \"{project}\\win64\"",
]

# Command to repair the wheel by copying DLLs.
# This will also be executed by cmd.exe.
# %INSTALL_DIR% is expanded by cmd.exe from the environment variables.
# The PowerShell command string is quoted for cmd.exe, and internal PowerShell strings are single-quoted.
repair-wheel-command = "powershell.exe -NoProfile -Command \"Get-ChildItem -Path '%INSTALL_DIR%\\bin\\*.dll' | Copy-Item -Destination '{dest_dir}' -ErrorAction SilentlyContinue\""

[tool.cibuildwheel.windows.environment]
PATH = "{project}\\win64\\bin;{env_path}" # This prepends to PATH for the build environment
INCLUDE = "{project}\\win64\\include;{env_include}"
LIB = "{project}\\win64\\lib;{env_lib}"
TESSDATA_PREFIX = "{project}\\tessdata"
INSTALL_DIR = "{project}\\win64" # Makes %INSTALL_DIR% available to cmd.exe
