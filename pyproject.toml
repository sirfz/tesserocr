[tool.cibuildwheel]
build-verbosity = "1"

manylinux-x86_64-image = "manylinux_2_28"
manylinux-aarch64-image = "manylinux_2_28"

[tool.cibuildwheel.linux]
before-all = [
  "bash .github/build-scripts/manylinux-install-build-dependencies.sh",
  "bash .github/build-scripts/linux-install-tesseract.sh",
]

[[tool.cibuildwheel.overrides]]
select = "*-musllinux*"
before-all = [
  "bash .github/build-scripts/musllinux-install-build-dependencies.sh",
  "bash .github/build-scripts/linux-install-tesseract.sh",
]

[tool.cibuildwheel.macos]
before-all = [
  "bash .github/build-scripts/macos-install-build-dependencies.sh",
  "bash .github/build-scripts/macos-install-tesseract.sh",
]

[tool.cibuildwheel.windows]
# Command to run before building wheels on Windows
before-all = [
  # Use pwsh and {project} placeholder for paths
  "pwsh -ExecutionPolicy Bypass -File {project}/.github/build-scripts/windows-install-dependencies.ps1 -InstallDir {project}\\win64",
]

# Command to repair the wheel by copying DLLs
# Use pwsh here as well. $env:INSTALL_DIR will be set from the environment table below.
repair-wheel-command = "pwsh -Command \"Get-ChildItem -Path $env:INSTALL_DIR\\bin\\*.dll | Copy-Item -Destination {dest_dir} -ErrorAction SilentlyContinue\""

# Skip specific Python versions for Windows builds, if needed
skip = "cp36-* cp37-* cp38-*" # Matches your existing skip configuration

# Environment variables for the build process on Windows
[tool.cibuildwheel.windows.environment]
PATH = "{project}\\win64\\bin;{env_path}"
INCLUDE = "{project}\\win64\\include;{env_include}"
LIB = "{project}\\win64\\lib;{env_lib}"
TESSDATA_PREFIX = "{project}\\tessdata"
INSTALL_DIR = "{project}\\win64" # Make INSTALL_DIR available to the repair command's environment
