# build tesserocr on windows using cmake.

name: win64

on:
  workflow_dispatch:
  
  push:
    branches: [ master ]
    # tags:
      # - 'v*
  # [push, pull_request]
  
env:
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows Latest MSVC", artifact: "Windows-MSVC.7z",
            os: windows-latest,
            cc: "cl", cxx: "cl",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          }
        # - {
            # name: "Windows Latest MinGW", artifact: "Windows-MinGW.7z",
            # os: windows-latest,
            # cc: "gcc", cxx: "g++"
          # }

    steps:
      - name: Build and Install leptonica
        run: |
             mkdir -p ${HOME}/.local
             git clone --depth 1 https://github.com/DanBloomberg/leptonica.git && cd leptonica
             cmake -Bbuild -GNinja -DCMAKE_BUILD_TYPE=Release -DBUILD_PROG=OFF -DCMAKE_INSTALL_PREFIX=${HOME}/.local
             # -DSW_BUILD=OFF -DBUILD_SHARED_LIBS=ON  -DCMAKE_PREFIX_PATH=${HOME}/.local/
             cmake --build build --config Release --target install
      - name: Build and Install tesseract 
        run: |
             git clone -b 4.1.1 --depth 1 https://github.com/tesseract-ocr/tesseract.git  && cd tesseract
             echo "${HOME}/.local/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
             echo "PKG_CONFIG_PATH=${HOME}/.local/lib/pkgconfig" >> $GITHUB_ENV
             # mkdir ${HOME}/.local/src
             # cd ${HOME}/.local/src                
             cmake -Bbuild -DBUILD_TRAINING_TOOLS=OFF -DSW_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DOPENMP_BUILD=OFF -DCMAKE_INSTALL_PREFIX=${HOME}/.local/ -DCMAKE_PREFIX_PATH=${HOME}/.local/
             cmake --build build --config Release --target install
               # D:/a/tesserocr/tesserocr/tesseract/build/CMakeFiles/CMakeOutput.log
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest
          pip install --upgrade -r requirements.txt 
          pip install --upgrade -r requirements-dev.txt
          python setup.py sdist bdist_wheel
          python setup.py install
          # export TESSDATA_PREFIX=/usr/share/tesseract-ocr/4.00/tessdata
      - name: Test with pytest
        run: |
          export LC_ALL=C
          tesseract a b -l a
          pytest
