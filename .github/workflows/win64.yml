# build tesserocr on windows using cmake.

name: win64

on:
  workflow_dispatch:
  
  push:
    branches: [ master ]
    # tags:
      # - 'v*
  # [push, pull_request]
  
env:
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows Latest MSVC", artifact: "Windows-MSVC.7z",
            os: windows-latest,
            cc: "cl", cxx: "cl",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          }
        # - {
            # name: "Windows Latest MinGW", artifact: "Windows-MinGW.7z",
            # os: windows-latest,
            # cc: "gcc", cxx: "g++"
          # }

    steps:
      - name: Build and Install leptonica
        shell: cmd
        run: |
             mkdir d:/a/local
             set PKG_CONFIG_PATH=d:/a/local/lib/pkgconfig
             echo "PKG_CONFIG_PATH=d:/a/local/lib/pkgconfig" >> $GITHUB_ENV
             echo "Building webp because leptonica detect it and it failes..."
             git clone --depth 1 https://github.com/webmproject/libwebp.git && cd libwebp
             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local
             cmake --build build --config Release --target install
             cd ..
             git clone --depth 1 https://github.com/DanBloomberg/leptonica.git && cd leptonica
             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DBUILD_PROG=OFF -DSW_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local
             cmake --build build --config Release --target install
      - name: Build and Install tesseract 
        shell: cmd
        run: |
             git clone -b 4.1.1 --depth 1 https://github.com/tesseract-ocr/tesseract.git  && cd tesseract
             cmake -Bbuild -DBUILD_TRAINING_TOOLS=OFF -DSW_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DOPENMP_BUILD=OFF -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local
             cmake --build build --config Release --target install
             REM D:/a/tesserocr/tesserocr/tesseract/build/CMakeFiles/CMakeOutput.log
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest
          pip install --upgrade -r requirements.txt 
          pip install --upgrade -r requirements-dev.txt
          SET PATH=d:/a/local/bin;%PATH%
          SET INCLUDE=d:/a/local/include;%INCLUDE%
          SET LIBPATH=d:/a/local/lib;%LIBPATH%
          python setup.py sdist bdist_wheel
          python setup.py install
      - name: Test with pytest
        run: |
          export LC_ALL=C
          git clone --depth 1 https://github.com/tesseract-ocr/tessconfigs tessdata
          mkdir d:/a/local/share
          move tessdata d:/a/local/share
          curl -L https://github.com/tesseract-ocr/tessdata/raw/master/eng.traineddata --output d:/a/local/share/tessdata/eng.traineddata
          curl -L https://github.com/tesseract-ocr/tessdata/raw/master/osd.traineddata --output d:/a/local/share/tessdata/osd.traineddata          
          SET TESSDATA_PREFIX=d:/a/local/share/tessdata
          tesseract -v
          pytest
